<launch>
	<!-- send parameters needed for motion planning (only planning_environment?) -->  
	<rosparam command="load" ns="robot_description_collision" file="$(find veltrobot_data)/conf/collision_checks_both_arms.yaml" />
	<rosparam command="load" ns="robot_description_planning" file="$(find veltrobot_data)/conf/planning_groups.yaml" />


  <!-- make point cloud snapshots into collision maps -->
  <node pkg="collision_map" type="collision_map_self_occ_node" name="collision_map_self_occ_node" respawn="true" output="screen">
    <!-- The default padding to be added for the body parts the robot can see -->
    <param name="self_see_default_padding" type="double" value="0.02" />
    <!-- The default scaling to be added for the body parts the robot can see -->
    <param name="self_see_default_scale" type="double" value="1.0" />
    <!-- if someone asks for a stable map, publish the static map on the dynamic
         map topic and no longer publish dynamic maps -->
    <!--<param name="publish_static_over_dynamic_map" type="bool" value="true" /> -->
    <param name="publish_static_over_dynamic_map" type="bool" value="false" />
    <!-- <param name="fixed_frame" type="string" value="base_link" /> -->
    <param name="fixed_frame" type="string" value="/stereo_camera" />
    <!-- define a box of size 2x3x4 around (1.1,  0, 0) in the robot frame -->
    <!-- <param name="robot_frame" type="string" value="base_link" /> -->
    <!-- or try /world /torso /stereo_camera?  (NEED A BASE LINK!) -->
    <param name="robot_frame" type="string" value="/stereo_camera" />
    <!--<param name="origin_x" type="double" value="1.1" />
    <param name="origin_y" type="double" value="0.0" />
    <param name="origin_z" type="double" value="0.0" />
    <param name="dimension_x" type="double" value="1.0" />
    <param name="dimension_y" type="double" value="1.5" />
    <param name="dimension_z" type="double" value="2.0" /> -->
    <param name="origin_x" type="double" value="0.0" />
    <param name="origin_y" type="double" value="0.0" />
    <param name="origin_z" type="double" value="1.0" />
    <param name="dimension_x" type="double" value="0.5" />
    <param name="dimension_y" type="double" value="0.5" />
    <param name="dimension_z" type="double" value="0.5" />    
    <!-- set the resolution (1.0 cm) -->
    <param name="resolution" type="double" value="0.02" />
    <!-- cloud sources -->
    <rosparam command="load" file="$(find veltrobot_data)/conf/collision_map_sources.yaml" />
  </node>
  

  <node pkg="planning_environment" type="environment_server" output="screen" name="environment_server_right_arm">      
    <remap from="/collision_map" to="/collision_map_occ" />
    <remap from="/collision_map_update" to="/collision_map_occ_update" />
    
    <param name="global_frame" type="string" value="/torso" />
    
    <param name="group" type="string" value="right_arm" />
    <param name="allow_valid_collisions" type="bool" value="false" />

    <!-- <param name="collision_map_safety_timeout" type="double" value="100000.0" /> -->
    <!-- <param name="joint_states_safety_timeout" type="double" value="1.0" /> -->
    <!-- <param name="bounding_planes" type="string" value="0 0 1 -0.01" /> -->

    <param name="pointcloud_padd" type="double" value="0.00" />

    <param name="contacts_to_compute_for_display" type="int" value="50" />

    <rosparam command="load" file="$(find veltrobot_data)/conf/environment_server_padding.yaml" />		

  </node>  

</launch>
